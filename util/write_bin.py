import struct
import random

pim_set_unit_test_local_memory = \
    [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,  # mask 1: 256, 16

     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  # mask 2: 135, 9

     0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff,
     0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff,  # mask 3: 192, 16

     0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0x55, 0x55, 0xff, 0xff,
     0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  # mask 4: 120, 9

     0x2c, 0x19, 0x96, 0x56, 0xfd, 0x9a, 0x20, 0x42, 0xfd, 0xcc, 0xeb, 0x0b, 0x00, 0x00, 0x96, 0xe8,
     0x39, 0xca, 0x00, 0x00, 0x22, 0x7b, 0xbf, 0x25, 0x00, 0x00, 0x96, 0xb6, 0x25, 0xf2, 0x49, 0x7a,  # mask 5: 107, 13
     ]

pim_output_unit_test_local_memory = \
    [0x08, 0x08, 0x12, 0x28, 0x80, 0x20, 0x94, 0x04, 0x08, 0x08, 0x12, 0x28, 0x80, 0x20, 0x94, 0x04,
     0x08, 0x08, 0x12, 0x28, 0x80, 0x20, 0x94, 0x04, 0x08, 0x08, 0x12, 0x28, 0x80, 0x20, 0x94, 0x04,  # mask 1: 48

     0x00, 0x49, 0x00, 0x01, 0x08, 0x20, 0x00, 0x00, 0x00, 0x49, 0x00, 0x01, 0x08, 0x20, 0x00, 0x00,
     0x00, 0x49, 0x00, 0x01, 0x08, 0x20, 0x00, 0x00, 0x00, 0x49, 0x00, 0x01, 0x08, 0x20, 0x00, 0x00,  # mask 2: 24
     ]


def write_bin(file, byte_list):
    with open(file, 'wb') as fw:
        for x in byte_list:
            byte = struct.pack('B', x)
            fw.write(byte)


def get_rand_mask():
    rand_list = [random.randint(0, 255) for _ in range(32)]

    for i in range(3):
        index = random.randint(0, 15)
        rand_list[2 * index] = 0
        rand_list[2 * index + 1] = 0

    rand_list_hex_str = ''
    activation_element_col_cnt = 0
    for i, value in enumerate(rand_list):
        if i == 0:
            rand_list_hex_str += '['
        else:
            rand_list_hex_str += ', '
        rand_list_hex_str += hex(value)
        for j in range(8):
            if (value & (1 << j)) != 0:
                activation_element_col_cnt += 1
    rand_list_hex_str += ']'
    print(rand_list_hex_str)
    print(activation_element_col_cnt)


def write_pim_set_unit_test_local_memory():
    file = r'D:\Dropbox\Dropbox\Workspace\code\pim-sim\test_data\pim_set\local_memory_image.bin'
    write_bin(file, pim_set_unit_test_local_memory)


def write_pim_output_unit_test_local_memory():
    file = r'D:\Dropbox\Dropbox\Workspace\code\pim-sim\test_data\pim_output\local_memory_image.bin'
    write_bin(file, pim_output_unit_test_local_memory)


if __name__ == '__main__':
    write_pim_output_unit_test_local_memory()
