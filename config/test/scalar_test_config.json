{
  "chip_config": {
    "core_cnt": 1,
    "core_config": {
      "control_unit_config": {
        "controller_static_power_mW": 0.0,
        "controller_dynamic_power_mW": 0.0,
        "fetch_static_power_mW": 0.0,
        "fetch_dynamic_power_mW": 0.0,
        "decode_static_power_mW": 0.0,
        "decode_dynamic_power_mW": 0.0
      },
      "register_unit_config": {
        "static_power_mW": 0.0,
        "dynamic_power_mW": 0.0,
        "special_register_binding": [
          {
            "special": 29,
            "general": 24
          }
        ]
      },
      "scalar_unit_config": {
        "default_functor_static_power_mW": 0.0,
        "default_functor_dynamic_power_mW": 0.0,
        "functor_list": [
          {
            "inst_name": "scalar-RR-add",
            "static_power_mW": 0.0,
            "dynamic_power_mW": 0.0
          }
        ]
      },
      "simd_unit_config": {
        "pipeline": true,
        "functor_list": [
          {
            "name": "quantify",
            "input_cnt": 2,
            "data_bit_width": {
              "input1": 32,
              "input2": 16,
              "output": 4
            },
            "functor_cnt": 32,
            "latency_cycle": 1,
            "static_power_per_functor_mW": 1.0,
            "dynamic_power_per_functor_mW": 1.0
          },
          {
            "name": "test",
            "input_cnt": 1,
            "data_bit_width": {
              "input1": 8,
              "output": 8
            },
            "functor_cnt": 16,
            "latency_cycle": 1,
            "static_power_per_functor_mW": 1.0,
            "dynamic_power_per_functor_mW": 1.0
          }
        ],
        "instruction_list": [
          {
            "name": "vqv",
            "input_cnt": 2,
            "opcode": "0xff",
            "input1_type": "vector",
            "input2_type": "vector",
            "functor_binding_list": [
              {
                "input_bit_width": {
                  "input1": 32,
                  "input2": 16
                },
                "functor_name": "quantify"
              }
            ]
          },
          {
            "name": "test",
            "input_cnt": 1,
            "opcode": "0x00",
            "input1_type": "vector",
            "functor_binding_list": [
              {
                "input_bit_width": {
                  "input1": 8
                },
                "functor_name": "test"
              }
            ]
          }
        ]
      },
      "cim_unit_config": {
        "macro_total_cnt": 64,
        "macro_group_size": 16,
        "macro_size": {
          "compartment_cnt_per_macro": 1,
          "element_cnt_per_compartment": 1,
          "row_cnt_per_element": 1,
          "bit_width_per_row": 1
        },
        "ipu": {
          "latency_cycle": 1,
          "static_power_mW": 1.0,
          "dynamic_power_mW": 1.0
        },
        "sram": {
          "write_latency_cycle": 1,
          "read_latency_cycle": 1,
          "static_power_mW": 1.0,
          "write_dynamic_power_per_bit_mW": 1.0,
          "read_dynamic_power_per_bit_mW": 1.0
        },
        "adder_tree": {
          "latency_cycle": 1,
          "static_power_mW": 1.0,
          "dynamic_power_mW": 1.0
        },
        "shift_adder": {
          "latency_cycle": 1,
          "static_power_mW": 1.0,
          "dynamic_power_mW": 1.0
        },
        "result_adder": {
          "latency_cycle": 1,
          "static_power_mW": 1.0,
          "dynamic_power_mW": 1.0
        },
        "value_sparse": true,
        "value_sparse_config": {
          "mask_bit_width": 1,
          "latency_cycle": 1,
          "static_power_mW": 1.0,
          "dynamic_power_mW": 1.0,
          "output_macro_group_cnt": 1
        },
        "bit_sparse": true,
        "bit_sparse_config": {
          "mask_bit_width": 3,
          "latency_cycle": 1,
          "static_power_mW": 1.0,
          "dynamic_power_mW": 1.0,
          "unit_byte": 96,
          "reg_buffer_static_power_mW": 1.0,
          "reg_buffer_dynamic_power_mW_per_unit": 1.0
        },
        "input_bit_sparse": false
      },
      "local_memory_unit_config": {
        "memory_list": [
          {
            "name": "local_ram",
            "type": "ram",
            "duplicate_cnt": 2,
            "hardware_config": {
              "size_byte": 1024,
              "width_byte": 16,
              "write_latency_cycle": 1,
              "read_latency_cycle": 1,
              "static_power_mW": 1.0,
              "write_dynamic_power_mW": 1.0,
              "read_dynamic_power_mW": 1.0
            }
          },
          {
            "name": "local_reg_buffer",
            "type": "reg_buffer",
            "hardware_config": {
              "size_byte": 1024,
              "read_max_width_byte": 16,
              "write_max_width_byte": 16,
              "rw_min_unit_byte": 4,
              "static_power_mW": 1.0,
              "rw_dynamic_power_per_unit_mW": 1.0
            }
          }
        ]
      },
      "transfer_unit_config": {
        "pipeline": true
      }
    },
    "address_space_config": [
      {"name": "cim_unit", "size": 1024},
      {"name": "local_ram", "size": 1024},
      {"name": "local_reg_buffer", "size": 1024}
    ]
  },
  "sim_config": {
    "period_ns": 5.0,
    "sim_mode": "run_one_round",
    "data_mode": "real_data",
    "sim_time_ms": 1.0
  }
}