{
  "chip_config": {
    "core_cnt": 32,
    "core_config": {
      "register_unit_config": {
        "static_power_mW": 0.0,
        "dynamic_power_mW": 0.0,
        "special_register_binding": [
          {
            "special": 32,
            "general": 32
          }
        ]
      },
      "simd_unit_config": {
        "pipeline": true,
        "functor_list": [
          {
            "name": "add-fp16",
            "input_cnt": 2,
            "data_bit_width": {
              "input1": 16,
              "input2": 16,
              "output": 16
            },
            "functor_cnt": 16,
            "latency_cycle": 1,
            "static_power_per_functor_mW": 1.0,
            "dynamic_power_per_functor_mW": 1.0
          },
          {
            "name": "multiply-fp16",
            "input_cnt": 2,
            "data_bit_width": {
              "input1": 16,
              "input2": 16,
              "output": 16
            },
            "functor_cnt": 16,
            "latency_cycle": 1,
            "static_power_per_functor_mW": 1.0,
            "dynamic_power_per_functor_mW": 1.0
          },
          {
            "name": "max-fp16",
            "input_cnt": 2,
            "data_bit_width": {
              "input1": 16,
              "input2": 16,
              "output": 16
            },
            "functor_cnt": 16,
            "latency_cycle": 1,
            "static_power_per_functor_mW": 1.0,
            "dynamic_power_per_functor_mW": 1.0
          },
          {
            "name": "exp-fp16",
            "input_cnt": 1,
            "data_bit_width": {
              "input1": 16,
              "output": 16
            },
            "functor_cnt": 16,
            "latency_cycle": 1,
            "static_power_per_functor_mW": 1.0,
            "dynamic_power_per_functor_mW": 1.0
          },
          {
            "name": "div-fp16",
            "input_cnt": 2,
            "data_bit_width": {
              "input1": 16,
              "input2": 16,
              "output": 16
            },
            "functor_cnt": 16,
            "latency_cycle": 1,
            "static_power_per_functor_mW": 1.0,
            "dynamic_power_per_functor_mW": 1.0
          },
          {
            "name": "sub-fp16",
            "input_cnt": 2,
            "data_bit_width": {
              "input1": 16,
              "input2": 16,
              "output": 16
            },
            "functor_cnt": 16,
            "latency_cycle": 1,
            "static_power_per_functor_mW": 1.0,
            "dynamic_power_per_functor_mW": 1.0
          }
        ],
        "instruction_list": [
          {
            "name": "add",
            "input_cnt": 2,
            "opcode": "0x00",
            "input1_type": "vector",
            "input2_type": "vector",
            "functor_binding_list": [
              {
                "input_bit_width": {
                  "input1": 16,
                  "input2": 16
                },
                "functor_name": "add-fp16"
              }
            ]
          },
          {
            "name": "add-scalar",
            "input_cnt": 2,
            "opcode": "0x01",
            "input1_type": "vector",
            "input2_type": "scalar",
            "functor_binding_list": [
              {
                "input_bit_width": {
                  "input1": 16,
                  "input2": 16
                },
                "functor_name": "add-fp16"
              }
            ]
          },
          {
            "name": "multiply",
            "input_cnt": 2,
            "opcode": "0x02",
            "input1_type": "vector",
            "input2_type": "vector",
            "functor_binding_list": [
              {
                "input_bit_width": {
                  "input1": 16,
                  "input2": 16
                },
                "functor_name": "multiply-fp16"
              }
            ]
          },
          {
            "name": "vec-scalar-mul",
            "input_cnt": 2,
            "opcode": "0x07",
            "input1_type": "vector",
            "input2_type": "scalar",
            "functor_binding_list": [
              {
                "input_bit_width": {
                  "input1": 16,
                  "input2": 16
                },
                "functor_name": "multiply-fp16"
              }
            ]
          },
          {
            "name": "reduce-max",
            "input_cnt": 1,
            "opcode": "0x0b",
            "input1_type": "vector",
            "functor_binding_list": [{
              "input_bit_width": {
                "input1": 16
              },
              "functor_name": "max-fp16"
            }]
          },
          {
            "name": "vec-exp",
            "input_cnt": 1,
            "opcode": "0x0c",
            "input1_type": "vector",
            "functor_binding_list": [{
              "input_bit_width": {
                "input1": 16
              },
              "functor_name": "exp-fp16"
            }]
          },
          {
            "name": "reduce-sum",
            "input_cnt": 1,
            "opcode": "0x0d",
            "input1_type": "vector",
            "functor_binding_list": [{
              "input_bit_width": {
                "input1": 16
              },
              "functor_name": "add-fp16"
            }]
          },
          {
            "name": "vec-scalar-div",
            "input_cnt": 2,
            "opcode": "0x0e",
            "input1_type": "vector",
            "input2_type": "scalar",
            "functor_binding_list": [{
              "input_bit_width": {
                "input1": 16,
                "input2": 16
              },
              "functor_name": "div-fp16"
            }]
          },
          {
            "name": "vec-scalar-sub",
            "input_cnt": 2,
            "opcode": "0x0f",
            "input1_type": "vector",
            "input2_type": "scalar",
            "functor_binding_list": [{
              "input_bit_width": {
                "input1": 16,
                "input2": 16
              },
              "functor_name": "sub-fp16"
            }]
          }
        ]
      },
      "cim_unit_config": {
        "macro_total_cnt": 64,
        "macro_group_size": 16,
        "macro_size": {
          "compartment_cnt_per_macro": 1,
          "element_cnt_per_compartment": 1,
          "row_cnt_per_element": 1,
          "bit_width_per_row": 1
        }
      },
      "local_memory_unit_config": {
        "memory_list": [
          {
            "name": "local",
            "type": "ram",
            "duplicate_cnt": 2,
            "hardware_config": {
              "size_byte": 1024,
              "width_byte": 16,
              "write_latency_cycle": 1,
              "read_latency_cycle": 1,
              "static_power_mW": 1.0,
              "write_dynamic_power_mW": 1.0,
              "read_dynamic_power_mW": 1.0
            }
          }
        ]
      },
      "transfer_unit_config": {
        "pipeline": true
      }
    },
    "global_memory_config": {
      "global_memory_unit_config": {
        "memory_list": [
          {
            "name": "global",
            "type": "ram",
            "hardware_config": {
              "size_byte": 1024,
              "width_byte": 16,
              "write_latency_cycle": 1,
              "read_latency_cycle": 1,
              "static_power_mW": 1.0,
              "write_dynamic_power_mW": 1.0,
              "read_dynamic_power_mW": 1.0
            }
          }
        ]
      },
      "global_memory_switch_id": -1
    },
    "network_config": {
      "bus_width_byte": 16,
      "network_config_file_path": "../test_data/chip/network_config_1.json"
    },
    "address_space_config": [
      {"name": "cim_unit", "size": 1024},
      {"name": "local", "size": 1024},
      {"name": "global", "size": 1024}
    ]
  },
  "sim_config": {
    "period_ns": 5.0,
    "sim_mode": "run_one_round",
    "data_mode": "real_data",
    "sim_time_ms": 1.0
  }
}